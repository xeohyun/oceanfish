{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\src\\\\components\\\\ContributionCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ContributionCalendar.css';\nimport { CONTRIBUTION_QUERY } from '../queries/githubQueries';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContributionCalendar() {\n  _s();\n  const [contributions, setContributions] = useState([]); // 기여 데이터\n  const [error, setError] = useState(null); // 에러 상태\n  const username = 'xeohyun';\n  const token = process.env.REACT_APP_GITHUB_TOKEN;\n  useEffect(() => {\n    async function fetchGitHubContributions() {\n      try {\n        const response = await fetch('https://api.github.com/graphql', {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: CONTRIBUTION_QUERY,\n            variables: {\n              username\n            }\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.status}`);\n        }\n        const responseData = await response.json();\n        const weeks = responseData.data.user.contributionsCollection.contributionCalendar.weeks;\n\n        // 1차원 배열로 평탄화 및 월별 데이터 생성\n        const contributionDays = weeks.flatMap(week => week.contributionDays.map(day => ({\n          date: day.date,\n          commits: day.contributionCount,\n          color: day.color\n        })));\n\n        // 월별 데이터 생성\n        const uniqueMonths = Array.from(new Set(contributionDays.map(day => new Date(day.date).getMonth()))).map(month => new Date(0, month).toLocaleString('en', {\n          month: 'short'\n        })); // 월 이름\n\n        setMonths(uniqueMonths);\n        setContributions(contributionDays);\n      } catch (err) {\n        console.error(\"Error fetching contributions:\", err.message);\n        setError(err.message);\n      }\n    }\n    fetchGitHubContributions();\n  }, []);\n\n  // 데이터를 주(week) 단위로 분리\n  const weeks = Array.from({\n    length: 53\n  }, (_, weekIndex) => contributions.slice(weekIndex * 7, weekIndex * 7 + 7));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contribution-calendar\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Failed to load contributions: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-grid\",\n        children: weeks.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week-column\",\n          children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-cell\",\n            title: `${day.date}: ${day.commits || 0} contributions`,\n            style: {\n              backgroundColor: day.color || 'rgba(235, 237, 240, 0.5) !important',\n              // 기본 반투명 색상\n              opacity: day.commits === 0 ? 0.5 : 1 // 기여도가 없으면 반투명 처리\n            }\n          }, dayIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this))\n        }, weekIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ContributionCalendar, \"X4KKoONEUg6WAEh3XIRxGGukbSo=\");\n_c = ContributionCalendar;\nexport default ContributionCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContributionCalendar\");","map":{"version":3,"names":["React","useEffect","useState","CONTRIBUTION_QUERY","jsxDEV","_jsxDEV","Fragment","_Fragment","ContributionCalendar","_s","contributions","setContributions","error","setError","username","token","process","env","REACT_APP_GITHUB_TOKEN","fetchGitHubContributions","response","fetch","method","headers","Authorization","body","JSON","stringify","query","variables","ok","Error","status","responseData","json","weeks","data","user","contributionsCollection","contributionCalendar","contributionDays","flatMap","week","map","day","date","commits","contributionCount","color","uniqueMonths","Array","from","Set","Date","getMonth","month","toLocaleString","setMonths","err","console","message","length","_","weekIndex","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dayIndex","title","style","backgroundColor","opacity","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/src/components/ContributionCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionCalendar.css';\r\nimport { CONTRIBUTION_QUERY } from '../queries/githubQueries';\r\n\r\nfunction ContributionCalendar() {\r\n    const [contributions, setContributions] = useState([]); // 기여 데이터\r\n    const [error, setError] = useState(null); // 에러 상태\r\n    const username = 'xeohyun';\r\n    const token = process.env.REACT_APP_GITHUB_TOKEN;\r\n\r\n    useEffect(() => {\r\n        async function fetchGitHubContributions() {\r\n            try {\r\n                const response = await fetch('https://api.github.com/graphql', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        query: CONTRIBUTION_QUERY,\r\n                        variables: { username },\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const responseData = await response.json();\r\n                const weeks =\r\n                    responseData.data.user.contributionsCollection.contributionCalendar.weeks;\r\n\r\n                // 1차원 배열로 평탄화 및 월별 데이터 생성\r\n                const contributionDays = weeks.flatMap((week) =>\r\n                    week.contributionDays.map((day) => ({\r\n                        date: day.date,\r\n                        commits: day.contributionCount,\r\n                        color: day.color,\r\n                    }))\r\n                );\r\n\r\n                // 월별 데이터 생성\r\n                const uniqueMonths = Array.from(\r\n                    new Set(contributionDays.map((day) => new Date(day.date).getMonth()))\r\n                ).map((month) => new Date(0, month).toLocaleString('en', { month: 'short' })); // 월 이름\r\n\r\n                setMonths(uniqueMonths);\r\n                setContributions(contributionDays);\r\n            } catch (err) {\r\n                console.error(\"Error fetching contributions:\", err.message);\r\n                setError(err.message);\r\n            }\r\n        }\r\n\r\n        fetchGitHubContributions();\r\n    }, []);\r\n\r\n    // 데이터를 주(week) 단위로 분리\r\n    const weeks = Array.from({ length: 53 }, (_, weekIndex) =>\r\n        contributions.slice(weekIndex * 7, weekIndex * 7 + 7)\r\n    );\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            {error ? (\r\n                <div className=\"error-message\">\r\n                    <p>Failed to load contributions: {error}</p>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"calendar-grid\">\r\n                        {weeks.map((week, weekIndex) => (\r\n                            <div key={weekIndex} className=\"week-column\">\r\n                                {week.map((day, dayIndex) => (\r\n                                    <div\r\n                                        key={dayIndex}\r\n                                        className=\"day-cell\"\r\n                                        title={`${day.date}: ${day.commits || 0} contributions`}\r\n                                        style={{\r\n                                            backgroundColor: day.color || 'rgba(235, 237, 240, 0.5) !important', // 기본 반투명 색상\r\n                                            opacity: day.commits === 0 ? 0.5 : 1, // 기여도가 없으면 반투명 처리\r\n                                        }}\r\n                                    ></div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}