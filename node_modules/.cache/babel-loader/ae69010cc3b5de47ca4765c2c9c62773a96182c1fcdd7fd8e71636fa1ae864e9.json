{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false); // Collapsible state\n  const [tasks, setTasks] = useState(() => {\n    // 브라우저가 저장한 tasks 데이터 로드\n    const savedTasks = localStorage.getItem('tasks');\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  const [newTask, setNewTask] = useState(''); // Input for new tasks\n  const [newTaskTime, setNewTaskTime] = useState(''); // Input for task time\n\n  const toggleExpand = () => setIsExpanded(!isExpanded); // Toggle view\n\n  const addTask = () => {\n    if (newTask.trim()) {\n      const updatedTasks = [...tasks, {\n        id: tasks.length + 1,\n        text: newTask,\n        completed: false,\n        time: newTaskTime || ''\n      }];\n      setTasks(updatedTasks);\n      localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\n      setNewTask('');\n      setNewTaskTime('');\n    }\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\n  };\n  const toggleTaskCompletion = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addTask();\n    }\n  };\n  useEffect(() => {\n    // 초기화 시간을 계산\n    const now = new Date();\n    const nextMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0);\n    const timeUntilNextMidnight = nextMidnight - now;\n\n    // 다음 정오에 초기화 타이머 설정\n    const timer = setTimeout(() => {\n      setTasks([]); // 작업 초기화\n      localStorage.removeItem('tasks'); // localStorage에서도 초기화\n      setInterval(() => {\n        setTasks([]);\n        localStorage.removeItem('tasks');\n      }, 24 * 60 * 60 * 1000);\n    }, timeUntilNextMidnight);\n\n    // 컴포넌트 언마운트 시 타이머 정리\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-container ${isExpanded ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-toggle\",\n      onClick: toggleExpand,\n      children: isExpanded ? 'Close' : 'TODO'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Tasks for Today (${tasks.length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `todo-item ${task.completed ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => toggleTaskCompletion(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-text\",\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), task.time && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-time\",\n              children: task.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => deleteTask(task.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          placeholder: \"New task...\",\n          onKeyDown: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: newTaskTime,\n          onChange: e => setNewTaskTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"wh/3otBGyN5IswSqqcmOGqGTBU8=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ToDoList","_s","isExpanded","setIsExpanded","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","newTask","setNewTask","newTaskTime","setNewTaskTime","toggleExpand","addTask","trim","updatedTasks","id","length","text","completed","time","setItem","stringify","deleteTask","taskId","filter","task","toggleTaskCompletion","map","handleKeyPress","e","key","preventDefault","now","Date","nextMidnight","getFullYear","getMonth","getDate","timeUntilNextMidnight","timer","setTimeout","removeItem","setInterval","clearTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","value","target","placeholder","onKeyDown","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/src/components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ToDoList.css';\r\n\r\nfunction ToDoList() {\r\n    const [isExpanded, setIsExpanded] = useState(false); // Collapsible state\r\n    const [tasks, setTasks] = useState(() => {\r\n        // 브라우저가 저장한 tasks 데이터 로드\r\n        const savedTasks = localStorage.getItem('tasks');\r\n        return savedTasks ? JSON.parse(savedTasks) : [];\r\n    });\r\n    const [newTask, setNewTask] = useState(''); // Input for new tasks\r\n    const [newTaskTime, setNewTaskTime] = useState(''); // Input for task time\r\n\r\n    const toggleExpand = () => setIsExpanded(!isExpanded); // Toggle view\r\n\r\n    const addTask = () => {\r\n        if (newTask.trim()) {\r\n            const updatedTasks = [\r\n                ...tasks,\r\n                {\r\n                    id: tasks.length + 1,\r\n                    text: newTask,\r\n                    completed: false,\r\n                    time: newTaskTime || '',\r\n                },\r\n            ];\r\n            setTasks(updatedTasks);\r\n            localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\r\n            setNewTask('');\r\n            setNewTaskTime('');\r\n        }\r\n    };\r\n\r\n    const deleteTask = (taskId) => {\r\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\r\n        setTasks(updatedTasks);\r\n        localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\r\n    };\r\n\r\n    const toggleTaskCompletion = (taskId) => {\r\n        const updatedTasks = tasks.map((task) =>\r\n            task.id === taskId ? { ...task, completed: !task.completed } : task\r\n        );\r\n        setTasks(updatedTasks);\r\n        localStorage.setItem('tasks', JSON.stringify(updatedTasks)); // localStorage에 저장\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addTask();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 초기화 시간을 계산\r\n        const now = new Date();\r\n        const nextMidnight = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth(),\r\n            now.getDate() + 1,\r\n            0,\r\n            0,\r\n            0\r\n        );\r\n        const timeUntilNextMidnight = nextMidnight - now;\r\n\r\n        // 다음 정오에 초기화 타이머 설정\r\n        const timer = setTimeout(() => {\r\n            setTasks([]); // 작업 초기화\r\n            localStorage.removeItem('tasks'); // localStorage에서도 초기화\r\n            setInterval(() => {\r\n                setTasks([]);\r\n                localStorage.removeItem('tasks');\r\n            }, 24 * 60 * 60 * 1000);\r\n        }, timeUntilNextMidnight);\r\n\r\n        // 컴포넌트 언마운트 시 타이머 정리\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`todo-container ${isExpanded ? 'expanded' : ''}`}>\r\n            <button className=\"todo-toggle\" onClick={toggleExpand}>\r\n                {isExpanded ? 'Close' : 'TODO'}\r\n            </button>\r\n            {isExpanded && (\r\n                <div className=\"todo-card\">\r\n                    <h3>{`Tasks for Today (${tasks.length})`}</h3>\r\n                    <ul className=\"todo-list\">\r\n                        {tasks.map((task) => (\r\n                            <li key={task.id} className={`todo-item ${task.completed ? 'completed' : ''}`}>\r\n                                <div className=\"todo-details\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={task.completed}\r\n                                        onChange={() => toggleTaskCompletion(task.id)}\r\n                                    />\r\n                                    <span className=\"todo-text\">{task.text}</span>\r\n                                    {task.time && <span className=\"todo-time\">{task.time}</span>}\r\n                                </div>\r\n                                <button className=\"delete-btn\" onClick={() => deleteTask(task.id)}>\r\n                                    &times;\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"todo-input-container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newTask}\r\n                            onChange={(e) => setNewTask(e.target.value)}\r\n                            placeholder=\"New task...\"\r\n                            onKeyDown={handleKeyPress}\r\n                        />\r\n                        <input\r\n                            type=\"time\"\r\n                            value={newTaskTime}\r\n                            onChange={(e) => setNewTaskTime(e.target.value)}\r\n                        />\r\n                        <button onClick={addTask}>Add</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}