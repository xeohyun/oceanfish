{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\src\\\\components\\\\ContributionCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ContributionCalendar.css';\nimport { CONTRIBUTION_QUERY } from '../queries/githubQueries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContributionCalendar() {\n  _s();\n  const [contributions, setContributions] = useState([]); // 기여 데이터\n  const [error, setError] = useState(null); // 에러 상태\n  const username = 'xeohyun';\n  const token = process.env.REACT_APP_GITHUB_TOKEN;\n  useEffect(() => {\n    async function fetchGitHubContributions() {\n      try {\n        const response = await fetch('https://api.github.com/graphql', {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: CONTRIBUTION_QUERY,\n            variables: {\n              username\n            }\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.status}`);\n        }\n        const responseData = await response.json();\n        console.log('GraphQL API Response:', responseData);\n        const weeks = responseData.data.user.contributionsCollection.contributionCalendar.weeks;\n        if (!weeks || weeks.length === 0) {\n          throw new Error('No contribution data available');\n        }\n\n        // 주 단위 데이터를 평탄화하여 모든 날짜 데이터로 변환\n        const contributionDays = weeks.flatMap(week => week.contributionDays.map(day => ({\n          date: day.date,\n          commits: day.contributionCount,\n          color: day.color,\n          level: Math.min(4, Math.floor(day.contributionCount / 10)) // 0 ~ 4 레벨 계산\n        })));\n        console.log('Parsed Contribution Days:', contributionDays);\n        setContributions(contributionDays);\n      } catch (err) {\n        console.error('Error fetching contributions:', err.message);\n        setError(err.message);\n      }\n    }\n    fetchGitHubContributions();\n  }, []);\n\n  // 데이터를 주 단위로 분리\n  const weeks = Array.from({\n    length: 53\n  }, (_, weekIndex) => contributions.slice(weekIndex * 7, weekIndex * 7 + 7));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contribution-calendar\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Failed to load contributions: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: weeks.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-column\",\n        children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-cell\",\n          \"data-level\": day.level // 레벨 설정\n          ,\n          title: `${day.date}: ${day.commits || 0} contributions`,\n          style: {\n            backgroundColor: day.color || '#ebedf0'\n          }\n        }, dayIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this))\n      }, weekIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(ContributionCalendar, \"X4KKoONEUg6WAEh3XIRxGGukbSo=\");\n_c = ContributionCalendar;\nexport default ContributionCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContributionCalendar\");","map":{"version":3,"names":["React","useEffect","useState","CONTRIBUTION_QUERY","jsxDEV","_jsxDEV","ContributionCalendar","_s","contributions","setContributions","error","setError","username","token","process","env","REACT_APP_GITHUB_TOKEN","fetchGitHubContributions","response","fetch","method","headers","Authorization","body","JSON","stringify","query","variables","ok","Error","status","responseData","json","console","log","weeks","data","user","contributionsCollection","contributionCalendar","length","contributionDays","flatMap","week","map","day","date","commits","contributionCount","color","level","Math","min","floor","err","message","Array","from","_","weekIndex","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dayIndex","title","style","backgroundColor","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/src/components/ContributionCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionCalendar.css';\r\nimport { CONTRIBUTION_QUERY } from '../queries/githubQueries';\r\n\r\nfunction ContributionCalendar() {\r\n    const [contributions, setContributions] = useState([]); // 기여 데이터\r\n    const [error, setError] = useState(null); // 에러 상태\r\n    const username = 'xeohyun';\r\n    const token = process.env.REACT_APP_GITHUB_TOKEN;\r\n\r\n    useEffect(() => {\r\n        async function fetchGitHubContributions() {\r\n            try {\r\n                const response = await fetch('https://api.github.com/graphql', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        query: CONTRIBUTION_QUERY,\r\n                        variables: { username },\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const responseData = await response.json();\r\n                console.log('GraphQL API Response:', responseData);\r\n\r\n                const weeks =\r\n                    responseData.data.user.contributionsCollection.contributionCalendar.weeks;\r\n\r\n                if (!weeks || weeks.length === 0) {\r\n                    throw new Error('No contribution data available');\r\n                }\r\n\r\n                // 주 단위 데이터를 평탄화하여 모든 날짜 데이터로 변환\r\n                const contributionDays = weeks.flatMap((week) =>\r\n                    week.contributionDays.map((day) => ({\r\n                        date: day.date,\r\n                        commits: day.contributionCount,\r\n                        color: day.color,\r\n                        level: Math.min(4, Math.floor(day.contributionCount / 10)), // 0 ~ 4 레벨 계산\r\n                    }))\r\n                );\r\n\r\n                console.log('Parsed Contribution Days:', contributionDays);\r\n                setContributions(contributionDays);\r\n            } catch (err) {\r\n                console.error('Error fetching contributions:', err.message);\r\n                setError(err.message);\r\n            }\r\n        }\r\n\r\n        fetchGitHubContributions();\r\n    }, []);\r\n\r\n    // 데이터를 주 단위로 분리\r\n    const weeks = Array.from({ length: 53 }, (_, weekIndex) =>\r\n        contributions.slice(weekIndex * 7, weekIndex * 7 + 7)\r\n    );\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            {error ? (\r\n                <div className=\"error-message\">\r\n                    <p>Failed to load contributions: {error}</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"calendar-grid\">\r\n                    {weeks.map((week, weekIndex) => (\r\n                        <div key={weekIndex} className=\"week-column\">\r\n                            {week.map((day, dayIndex) => (\r\n                                <div\r\n                                    key={dayIndex}\r\n                                    className=\"day-cell\"\r\n                                    data-level={day.level} // 레벨 설정\r\n                                    title={`${day.date}: ${day.commits || 0} contributions`}\r\n                                    style={{\r\n                                        backgroundColor: day.color || '#ebedf0',\r\n                                    }}\r\n                                ></div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}