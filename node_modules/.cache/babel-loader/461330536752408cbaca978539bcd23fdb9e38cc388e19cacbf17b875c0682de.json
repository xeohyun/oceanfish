{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false); // Collapsible state\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Morning walk',\n    completed: false,\n    time: '7:00am'\n  }, {\n    id: 2,\n    text: 'Meeting with John Doe',\n    completed: false,\n    time: '9:30am'\n  }, {\n    id: 3,\n    text: 'Buy Pizza from Pizzahut',\n    completed: false,\n    time: '11:00am'\n  }]);\n  const [newTask, setNewTask] = useState(''); // Input for new tasks\n  const [newTaskTime, setNewTaskTime] = useState(''); // Input for task time\n\n  const toggleExpand = () => setIsExpanded(!isExpanded); // Toggle view\n\n  const addTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        id: tasks.length + 1,\n        text: newTask,\n        completed: false,\n        time: newTaskTime || 'N/A'\n      }]);\n      setNewTask('');\n      setNewTaskTime('');\n    }\n  };\n  const toggleTaskCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-container ${isExpanded ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-toggle\",\n      onClick: toggleExpand,\n      children: isExpanded ? 'Close' : 'ToDo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Tasks for Today (${tasks.length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `todo-item ${task.completed ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => toggleTaskCompletion(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-text\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-time\",\n            children: task.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          placeholder: \"New task...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: newTaskTime,\n          onChange: e => setNewTaskTime(e.target.value),\n          placeholder: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"Nvd3D0V0CH7MXtKECtQSORoIleQ=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoList","_s","isExpanded","setIsExpanded","tasks","setTasks","id","text","completed","time","newTask","setNewTask","newTaskTime","setNewTaskTime","toggleExpand","addTask","trim","length","toggleTaskCompletion","taskId","map","task","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","value","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/ToDoList.css';\r\n\r\nfunction ToDoList() {\r\n    const [isExpanded, setIsExpanded] = useState(false); // Collapsible state\r\n    const [tasks, setTasks] = useState([\r\n        { id: 1, text: 'Morning walk', completed: false, time: '7:00am' },\r\n        { id: 2, text: 'Meeting with John Doe', completed: false, time: '9:30am' },\r\n        { id: 3, text: 'Buy Pizza from Pizzahut', completed: false, time: '11:00am' },\r\n    ]);\r\n    const [newTask, setNewTask] = useState(''); // Input for new tasks\r\n    const [newTaskTime, setNewTaskTime] = useState(''); // Input for task time\r\n\r\n    const toggleExpand = () => setIsExpanded(!isExpanded); // Toggle view\r\n\r\n    const addTask = () => {\r\n        if (newTask.trim()) {\r\n            setTasks([\r\n                ...tasks,\r\n                { id: tasks.length + 1, text: newTask, completed: false, time: newTaskTime || 'N/A' },\r\n            ]);\r\n            setNewTask('');\r\n            setNewTaskTime('');\r\n        }\r\n    };\r\n\r\n    const toggleTaskCompletion = (taskId) => {\r\n        setTasks(\r\n            tasks.map((task) =>\r\n                task.id === taskId ? { ...task, completed: !task.completed } : task\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={`todo-container ${isExpanded ? 'expanded' : ''}`}>\r\n            <button className=\"todo-toggle\" onClick={toggleExpand}>\r\n                {isExpanded ? 'Close' : 'ToDo'}\r\n            </button>\r\n            {isExpanded && (\r\n                <div className=\"todo-card\">\r\n                    <h3>{`Tasks for Today (${tasks.length})`}</h3>\r\n                    <ul className=\"todo-list\">\r\n                        {tasks.map((task) => (\r\n                            <li key={task.id} className={`todo-item ${task.completed ? 'completed' : ''}`}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={task.completed}\r\n                                    onChange={() => toggleTaskCompletion(task.id)}\r\n                                />\r\n                                <span className=\"todo-text\">{task.text}</span>\r\n                                <span className=\"todo-time\">{task.time}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"todo-input-container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newTask}\r\n                            onChange={(e) => setNewTask(e.target.value)}\r\n                            placeholder=\"New task...\"\r\n                        />\r\n                        <input\r\n                            type=\"time\"\r\n                            value={newTaskTime}\r\n                            onChange={(e) => setNewTaskTime(e.target.value)}\r\n                            placeholder=\"Time\"\r\n                        />\r\n                        <button onClick={addTask}>Add</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}