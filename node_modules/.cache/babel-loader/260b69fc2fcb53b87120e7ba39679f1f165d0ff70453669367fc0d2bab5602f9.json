{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\src\\\\components\\\\ContributionCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ContributionCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContributionCalendar() {\n  _s();\n  const [contributions, setContributions] = useState([]);\n\n  // Generate a year's worth of contributions (example logic)\n  useEffect(() => {\n    const generateYearlyContributions = () => {\n      const today = new Date();\n      const oneYearAgo = new Date(today);\n      oneYearAgo.setFullYear(today.getFullYear() - 1);\n      const data = [];\n      let currentDate = new Date(oneYearAgo);\n      while (currentDate <= today) {\n        const randomCommits = Math.floor(Math.random() * 5); // 0~4\n        data.push({\n          date: currentDate.toISOString().split('T')[0],\n          commits: randomCommits\n        });\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      setContributions(data);\n    };\n    generateYearlyContributions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contribution-calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: contributions.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-cell level-${day.commits}`,\n        title: `${day.date}: ${day.commits} commits`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ContributionCalendar, \"reUV3o1RgiSCDiM72Bg1LOh5rok=\");\n_c = ContributionCalendar;\nexport default ContributionCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContributionCalendar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ContributionCalendar","_s","contributions","setContributions","generateYearlyContributions","today","Date","oneYearAgo","setFullYear","getFullYear","data","currentDate","randomCommits","Math","floor","random","push","date","toISOString","split","commits","setDate","getDate","id","children","className","map","day","index","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/src/components/ContributionCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionCalendar.css';\r\n\r\nfunction ContributionCalendar() {\r\n    const [contributions, setContributions] = useState([]);\r\n\r\n    // Generate a year's worth of contributions (example logic)\r\n    useEffect(() => {\r\n        const generateYearlyContributions = () => {\r\n            const today = new Date();\r\n            const oneYearAgo = new Date(today);\r\n            oneYearAgo.setFullYear(today.getFullYear() - 1);\r\n\r\n            const data = [];\r\n            let currentDate = new Date(oneYearAgo);\r\n\r\n            while (currentDate <= today) {\r\n                const randomCommits = Math.floor(Math.random() * 5); // 0~4\r\n                data.push({\r\n                    date: currentDate.toISOString().split('T')[0],\r\n                    commits: randomCommits,\r\n                });\r\n                currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n\r\n            setContributions(data);\r\n        };\r\n\r\n        generateYearlyContributions();\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"contribution-calendar\">\r\n            <div className=\"calendar-grid\">\r\n                {contributions.map((day, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`day-cell level-${day.commits}`}\r\n                        title={`${day.date}: ${day.commits} commits`}\r\n                    ></div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMQ,2BAA2B,GAAGA,CAAA,KAAM;MACtC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;MACxB,MAAMC,UAAU,GAAG,IAAID,IAAI,CAACD,KAAK,CAAC;MAClCE,UAAU,CAACC,WAAW,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;MAE/C,MAAMC,IAAI,GAAG,EAAE;MACf,IAAIC,WAAW,GAAG,IAAIL,IAAI,CAACC,UAAU,CAAC;MAEtC,OAAOI,WAAW,IAAIN,KAAK,EAAE;QACzB,MAAMO,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrDL,IAAI,CAACM,IAAI,CAAC;UACNC,IAAI,EAAEN,WAAW,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7CC,OAAO,EAAER;QACb,CAAC,CAAC;QACFD,WAAW,CAACU,OAAO,CAACV,WAAW,CAACW,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAClD;MAEAnB,gBAAgB,CAACO,IAAI,CAAC;IAC1B,CAAC;IAEDN,2BAA2B,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKwB,EAAE,EAAC,uBAAuB;IAAAC,QAAA,eAC3BzB,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAD,QAAA,EACzBtB,aAAa,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1B7B,OAAA;QAEI0B,SAAS,EAAE,kBAAkBE,GAAG,CAACP,OAAO,EAAG;QAC3CS,KAAK,EAAE,GAAGF,GAAG,CAACV,IAAI,KAAKU,GAAG,CAACP,OAAO;MAAW,GAFxCQ,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChC,EAAA,CAzCQD,oBAAoB;AAAAkC,EAAA,GAApBlC,oBAAoB;AA2C7B,eAAeA,oBAAoB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}