{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFish.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dustLeft from '../img/dust_left.png';\nimport dustRight from '../img/dust_right.png';\nimport fishLeft from '../img/adult_left.png';\nimport fishLeft1 from '../img/adult_left1.png';\nimport fishRight from '../img/adult_right.png';\nimport fishRight1 from '../img/adult_right1.png';\nimport '../css/OceanSunFish.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFish() {\n  _s();\n  const [level, setLevel] = useState(1);\n  const [isAlive, setIsAlive] = useState(true);\n  const [dailyContribution, setDailyContribution] = useState(0);\n  const [stage, setStage] = useState('dust');\n  const [animationFrame, setAnimationFrame] = useState(0); // 애니메이션 프레임 (0, 1)\n\n  const images = {\n    dust: [dustLeft],\n    baby: [dustRight],\n    adult: [fishLeft, fishLeft1],\n    king: [fishRight, fishRight1]\n  };\n\n  // API에서 데이터를 가져오는 함수\n  useEffect(() => {\n    const fetchSunfishData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sunfish data');\n        }\n        const data = await response.json();\n        setLevel(data.level);\n        setIsAlive(data.is_alive);\n        setDailyContribution(data.daily_contribution);\n        updateStage(data.level);\n      } catch (error) {\n        console.error('Error fetching sunfish data:', error);\n      }\n    };\n    fetchSunfishData();\n  }, []);\n\n  // 애니메이션 프레임 변경\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnimationFrame(prev => prev === 0 ? 1 : 0); // 프레임 0과 1을 번갈아 전환\n    }, 1000); // 1초마다 전환\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 클리어\n  }, []);\n\n  // 단계(stage) 업데이트\n  const updateStage = level => {\n    if (level >= 1 && level <= 3) {\n      setStage('dust');\n    } else if (level >= 4 && level <= 10) {\n      setStage('baby');\n    } else if (level >= 11 && level <= 30) {\n      setStage('adult');\n    } else if (level >= 31 && level <= 50) {\n      setStage('king');\n    } else if (level >= 51) {\n      setStage('new');\n      setLevel(1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stage: \", stage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", isAlive ? 'Alive' : 'Dead']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocean-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[stage],\n        alt: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Today's Contribution: \", dailyContribution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFish, \"AWbpvDwYB/mEQwaxbjS7qLSAiZY=\");\n_c = OceanSunFish;\nexport default OceanSunFish;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFish\");","map":{"version":3,"names":["React","useState","useEffect","dustLeft","dustRight","fishLeft","fishLeft1","fishRight","fishRight1","jsxDEV","_jsxDEV","OceanSunFish","_s","level","setLevel","isAlive","setIsAlive","dailyContribution","setDailyContribution","stage","setStage","animationFrame","setAnimationFrame","images","dust","baby","adult","king","fetchSunfishData","response","fetch","ok","Error","data","json","is_alive","daily_contribution","updateStage","error","console","interval","setInterval","prev","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFish.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dustLeft from '../img/dust_left.png';\r\nimport dustRight from '../img/dust_right.png';\r\nimport fishLeft from '../img/adult_left.png';\r\nimport fishLeft1 from '../img/adult_left1.png';\r\nimport fishRight from '../img/adult_right.png';\r\nimport fishRight1 from '../img/adult_right1.png';\r\nimport '../css/OceanSunFish.css';\r\n\r\nfunction OceanSunFish() {\r\n    const [level, setLevel] = useState(1);\r\n    const [isAlive, setIsAlive] = useState(true);\r\n    const [dailyContribution, setDailyContribution] = useState(0);\r\n    const [stage, setStage] = useState('dust');\r\n    const [animationFrame, setAnimationFrame] = useState(0); // 애니메이션 프레임 (0, 1)\r\n\r\n    const images = {\r\n        dust: [dustLeft],\r\n        baby: [dustRight],\r\n        adult: [fishLeft, fishLeft1],\r\n        king: [fishRight, fishRight1],\r\n    };\r\n\r\n    // API에서 데이터를 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchSunfishData = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sunfish data');\r\n                }\r\n                const data = await response.json();\r\n                setLevel(data.level);\r\n                setIsAlive(data.is_alive);\r\n                setDailyContribution(data.daily_contribution);\r\n                updateStage(data.level);\r\n            } catch (error) {\r\n                console.error('Error fetching sunfish data:', error);\r\n            }\r\n        };\r\n\r\n        fetchSunfishData();\r\n    }, []);\r\n\r\n    // 애니메이션 프레임 변경\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setAnimationFrame((prev) => (prev === 0 ? 1 : 0)); // 프레임 0과 1을 번갈아 전환\r\n        }, 1000); // 1초마다 전환\r\n        return () => clearInterval(interval); // 컴포넌트 언마운트 시 클리어\r\n    }, []);\r\n\r\n    // 단계(stage) 업데이트\r\n    const updateStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            setStage('dust');\r\n        } else if (level >= 4 && level <= 10) {\r\n            setStage('baby');\r\n        } else if (level >= 11 && level <= 30) {\r\n            setStage('adult');\r\n        } else if (level >= 31 && level <= 50) {\r\n            setStage('king');\r\n        } else if (level >= 51) {\r\n            setStage('new');\r\n            setLevel(1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            <h2>Level: {level}</h2>\r\n            <p>Stage: {stage}</p>\r\n            <p>Status: {isAlive ? 'Alive' : 'Dead'}</p>\r\n            <div className=\"ocean-image\">\r\n                <img src={images[stage]} alt={stage} />\r\n            </div>\r\n            <p>Today's Contribution: {dailyContribution}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFish;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}