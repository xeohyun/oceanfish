{"ast":null,"code":"/**\r\n * Calculate the level-up based on contributions and current level.\r\n * @param {number} currentLevel - The current level of the Sunfish.\r\n * @param {number} totalContributions - Total contributions made today.\r\n * @returns {object} Updated level and stage.\r\n */\nexport const calculateLevelUp = (currentLevel, totalContributions) => {\n  // 하루 최대 레벨업 제한\n  const maxLevelUp = 4;\n  const levelUp = Math.min(maxLevelUp, totalContributions);\n\n  // 새로운 레벨 계산\n  const updatedLevel = currentLevel + levelUp;\n\n  // 단계(stage) 계산\n  const getStage = level => {\n    if (level >= 1 && level <= 3) {\n      return 'dust';\n    } else if (level >= 4 && level <= 10) {\n      return 'baby';\n    } else if (level >= 11 && level <= 30) {\n      return 'adult';\n    } else if (level >= 31 && level <= 50) {\n      return 'king';\n    }\n    return 'dust'; // 기본값\n  };\n  return {\n    level: updatedLevel,\n    stage: getStage(updatedLevel)\n  };\n};","map":{"version":3,"names":["calculateLevelUp","currentLevel","totalContributions","maxLevelUp","levelUp","Math","min","updatedLevel","getStage","level","stage"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/utils/levelUpManager.js"],"sourcesContent":["/**\r\n * Calculate the level-up based on contributions and current level.\r\n * @param {number} currentLevel - The current level of the Sunfish.\r\n * @param {number} totalContributions - Total contributions made today.\r\n * @returns {object} Updated level and stage.\r\n */\r\nexport const calculateLevelUp = (currentLevel, totalContributions) => {\r\n    // 하루 최대 레벨업 제한\r\n    const maxLevelUp = 4;\r\n    const levelUp = Math.min(maxLevelUp, totalContributions);\r\n\r\n    // 새로운 레벨 계산\r\n    const updatedLevel = currentLevel + levelUp;\r\n\r\n    // 단계(stage) 계산\r\n    const getStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            return 'dust';\r\n        } else if (level >= 4 && level <= 10) {\r\n            return 'baby';\r\n        } else if (level >= 11 && level <= 30) {\r\n            return 'adult';\r\n        } else if (level >= 31 && level <= 50) {\r\n            return 'king';\r\n        }\r\n        return 'dust'; // 기본값\r\n    };\r\n\r\n    return {\r\n        level: updatedLevel,\r\n        stage: getStage(updatedLevel),\r\n    };\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,GAAGA,CAACC,YAAY,EAAEC,kBAAkB,KAAK;EAClE;EACA,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACH,UAAU,EAAED,kBAAkB,CAAC;;EAExD;EACA,MAAMK,YAAY,GAAGN,YAAY,GAAGG,OAAO;;EAE3C;EACA,MAAMI,QAAQ,GAAIC,KAAK,IAAK;IACxB,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,CAAC,EAAE;MAC1B,OAAO,MAAM;IACjB,CAAC,MAAM,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE,EAAE;MAClC,OAAO,MAAM;IACjB,CAAC,MAAM,IAAIA,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,EAAE,EAAE;MACnC,OAAO,OAAO;IAClB,CAAC,MAAM,IAAIA,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,EAAE,EAAE;MACnC,OAAO,MAAM;IACjB;IACA,OAAO,MAAM,CAAC,CAAC;EACnB,CAAC;EAED,OAAO;IACHA,KAAK,EAAEF,YAAY;IACnBG,KAAK,EAAEF,QAAQ,CAACD,YAAY;EAChC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}