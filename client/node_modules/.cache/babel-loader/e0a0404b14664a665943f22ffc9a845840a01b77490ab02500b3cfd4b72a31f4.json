{"ast":null,"code":"/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionDisplay.css'; // Ensure the correct CSS file is linked\r\n\r\nfunction ContributionDisplay() {\r\n    const [contributions, setContributions] = useState([]); // 초기값\r\n    const [loading, setLoading] = useState(true); // 로딩 상태\r\n    const [error, setError] = useState(null); // 에러 상태\r\n\r\n    useEffect(() => {\r\n        async function fetchBackendContributions() {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                // 기여 데이터를 레벨 계산\r\n                const processedData = data.map((day) => ({\r\n                    date: day.date,\r\n                    count: day.count,\r\n                    level: calculateLevel(day.count), // 기여도에 따라 레벨 설정\r\n                }));\r\n\r\n                setContributions(processedData); // 가공된 데이터 저장\r\n                setLoading(false); // 로딩 완료\r\n            } catch (err) {\r\n                console.error('Error fetching contributions:', err.message);\r\n                setError(err.message);\r\n                setLoading(false); // 로딩 완료\r\n            }\r\n        }\r\n\r\n        fetchBackendContributions();\r\n    }, []);\r\n\r\n    // 기여도에 따라 레벨 계산\r\n    const calculateLevel = (count) => {\r\n        if (count === 0) return 0;\r\n        if (count <= 3) return 1;\r\n        if (count <= 9) return 2;\r\n        if (count <= 19) return 3;\r\n        return 4;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading contributions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-message\">\r\n                <p>Failed to load contributions: {error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // 데이터를 7일씩 묶어서 주 단위로 처리\r\n    const weeks = [];\r\n    for (let i = 0; i < contributions.length; i += 7) {\r\n        weeks.push(contributions.slice(i, i + 7));\r\n    }\r\n\r\n    // 주는 오른쪽에서 왼쪽으로 정렬, 각 주의 날짜는 시간 순으로 위에서 아래로 정렬\r\n    const reversedWeeks = weeks.reverse();\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            <div className=\"calendar-grid\">\r\n                {reversedWeeks.map((week, weekIndex) => (\r\n                    <div key={weekIndex} className=\"week-column\">\r\n                        {week.map((day, dayIndex) => (\r\n                            <div\r\n                                key={dayIndex}\r\n                                className={`day-cell level-${day.level}`} // `level-X` 클래스 추가\r\n                                title={`${day.date}: ${day.count || 0} contributions`}\r\n                            ></div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionDisplay;\r\n*/","map":{"version":3,"names":[],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/ContributionDisplay.js"],"sourcesContent":["/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionDisplay.css'; // Ensure the correct CSS file is linked\r\n\r\nfunction ContributionDisplay() {\r\n    const [contributions, setContributions] = useState([]); // 초기값\r\n    const [loading, setLoading] = useState(true); // 로딩 상태\r\n    const [error, setError] = useState(null); // 에러 상태\r\n\r\n    useEffect(() => {\r\n        async function fetchBackendContributions() {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                // 기여 데이터를 레벨 계산\r\n                const processedData = data.map((day) => ({\r\n                    date: day.date,\r\n                    count: day.count,\r\n                    level: calculateLevel(day.count), // 기여도에 따라 레벨 설정\r\n                }));\r\n\r\n                setContributions(processedData); // 가공된 데이터 저장\r\n                setLoading(false); // 로딩 완료\r\n            } catch (err) {\r\n                console.error('Error fetching contributions:', err.message);\r\n                setError(err.message);\r\n                setLoading(false); // 로딩 완료\r\n            }\r\n        }\r\n\r\n        fetchBackendContributions();\r\n    }, []);\r\n\r\n    // 기여도에 따라 레벨 계산\r\n    const calculateLevel = (count) => {\r\n        if (count === 0) return 0;\r\n        if (count <= 3) return 1;\r\n        if (count <= 9) return 2;\r\n        if (count <= 19) return 3;\r\n        return 4;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading contributions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-message\">\r\n                <p>Failed to load contributions: {error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // 데이터를 7일씩 묶어서 주 단위로 처리\r\n    const weeks = [];\r\n    for (let i = 0; i < contributions.length; i += 7) {\r\n        weeks.push(contributions.slice(i, i + 7));\r\n    }\r\n\r\n    // 주는 오른쪽에서 왼쪽으로 정렬, 각 주의 날짜는 시간 순으로 위에서 아래로 정렬\r\n    const reversedWeeks = weeks.reverse();\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            <div className=\"calendar-grid\">\r\n                {reversedWeeks.map((week, weekIndex) => (\r\n                    <div key={weekIndex} className=\"week-column\">\r\n                        {week.map((day, dayIndex) => (\r\n                            <div\r\n                                key={dayIndex}\r\n                                className={`day-cell level-${day.level}`} // `level-X` 클래스 추가\r\n                                title={`${day.date}: ${day.count || 0} contributions`}\r\n                            ></div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionDisplay;\r\n*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}