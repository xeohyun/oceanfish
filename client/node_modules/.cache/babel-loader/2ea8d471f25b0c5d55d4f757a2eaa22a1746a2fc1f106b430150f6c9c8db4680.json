{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFishStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dustLeft from '../img/dust_left.png';\nimport dustRight from '../img/dust_right.png';\nimport fishLeft from '../img/adult_left.png';\nimport kingLeft from '../img/king_left.png';\nimport '../css/OceanSunFish.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFishStatus() {\n  _s();\n  const [sunfish, setSunfish] = useState(null);\n  const [todayContributions, setTodayContributions] = useState(0); // Today's contribution count\n\n  const images = {\n    dust: dustLeft,\n    baby: dustRight,\n    adult: fishLeft,\n    king: kingLeft\n  };\n\n  // Fetch Sunfish data\n  useEffect(() => {\n    const fetchSunfishData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sunfish data');\n        }\n        const data = await response.json();\n        if (Array.isArray(data) && data.length > 0) {\n          const latestSunfish = data[data.length - 1];\n          setSunfish(latestSunfish);\n          await fetchContributions(latestSunfish.id); // Fetch contributions for the latest Sunfish\n        }\n      } catch (error) {\n        console.error('Error fetching sunfish data:', error);\n      }\n    };\n    fetchSunfishData();\n  }, []);\n\n  // Fetch contributions for a specific Sunfish\n  const fetchContributions = async sunfishId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch contributions');\n      }\n      const data = await response.json();\n      console.log('Contribution data:', data);\n\n      // Calculate today's contributions\n      const today = new Date().toISOString().split('T')[0];\n      const todayData = data.find(item => item.date === today);\n      setTodayContributions(todayData ? todayData.count : 0);\n    } catch (error) {\n      console.error('Error fetching contributions:', error);\n    }\n  };\n  if (!sunfish) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Sunfish...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Determine stage\n  const getStage = level => {\n    if (level >= 1 && level <= 3) return 'dust';\n    if (level >= 4 && level <= 10) return 'baby';\n    if (level >= 11 && level <= 30) return 'adult';\n    if (level >= 31 && level <= 50) return 'king';\n    return 'dust';\n  };\n  const stage = getStage(sunfish.level);\n  const currentImage = images[stage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", sunfish.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stage: \", stage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", sunfish.is_alive ? 'Alive' : 'Dead']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Today's Contributions: \", todayContributions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocean-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImage,\n        alt: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFishStatus, \"b72CiaVfkOQzjBDlawFCj7dqppI=\");\n_c = OceanSunFishStatus;\nexport default OceanSunFishStatus;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFishStatus\");","map":{"version":3,"names":["React","useState","useEffect","dustLeft","dustRight","fishLeft","kingLeft","jsxDEV","_jsxDEV","OceanSunFishStatus","_s","sunfish","setSunfish","todayContributions","setTodayContributions","images","dust","baby","adult","king","fetchSunfishData","response","fetch","ok","Error","data","json","Array","isArray","length","latestSunfish","fetchContributions","id","error","console","sunfishId","log","today","Date","toISOString","split","todayData","find","item","date","count","children","fileName","_jsxFileName","lineNumber","columnNumber","getStage","level","stage","currentImage","className","is_alive","src","alt","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFishStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dustLeft from '../img/dust_left.png';\r\nimport dustRight from '../img/dust_right.png';\r\nimport fishLeft from '../img/adult_left.png';\r\nimport kingLeft from '../img/king_left.png';\r\nimport '../css/OceanSunFish.css';\r\n\r\nfunction OceanSunFishStatus() {\r\n    const [sunfish, setSunfish] = useState(null);\r\n    const [todayContributions, setTodayContributions] = useState(0); // Today's contribution count\r\n\r\n    const images = {\r\n        dust: dustLeft,\r\n        baby: dustRight,\r\n        adult: fishLeft,\r\n        king: kingLeft,\r\n    };\r\n\r\n    // Fetch Sunfish data\r\n    useEffect(() => {\r\n        const fetchSunfishData = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sunfish data');\r\n                }\r\n                const data = await response.json();\r\n\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    const latestSunfish = data[data.length - 1];\r\n                    setSunfish(latestSunfish);\r\n                    await fetchContributions(latestSunfish.id); // Fetch contributions for the latest Sunfish\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching sunfish data:', error);\r\n            }\r\n        };\r\n\r\n        fetchSunfishData();\r\n    }, []);\r\n\r\n    // Fetch contributions for a specific Sunfish\r\n    const fetchContributions = async (sunfishId) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch contributions');\r\n            }\r\n            const data = await response.json();\r\n            console.log('Contribution data:', data);\r\n\r\n            // Calculate today's contributions\r\n            const today = new Date().toISOString().split('T')[0];\r\n            const todayData = data.find((item) => item.date === today);\r\n            setTodayContributions(todayData ? todayData.count : 0);\r\n        } catch (error) {\r\n            console.error('Error fetching contributions:', error);\r\n        }\r\n    };\r\n\r\n    if (!sunfish) {\r\n        return <div>Loading Sunfish...</div>;\r\n    }\r\n\r\n    // Determine stage\r\n    const getStage = (level) => {\r\n        if (level >= 1 && level <= 3) return 'dust';\r\n        if (level >= 4 && level <= 10) return 'baby';\r\n        if (level >= 11 && level <= 30) return 'adult';\r\n        if (level >= 31 && level <= 50) return 'king';\r\n        return 'dust';\r\n    };\r\n\r\n    const stage = getStage(sunfish.level);\r\n    const currentImage = images[stage];\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            <h2>Level: {sunfish.level}</h2>\r\n            <p>Stage: {stage}</p>\r\n            <p>Status: {sunfish.is_alive ? 'Alive' : 'Dead'}</p>\r\n            <p>Today's Contributions: {todayContributions}</p>\r\n            <div className=\"ocean-image\">\r\n                <img src={currentImage} alt={stage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFishStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}