{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFish.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/OceanSunFish.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFish() {\n  _s();\n  const [level, setLevel] = useState(1); // Initial level\n  const [stage, setStage] = useState('dust'); // Initial stage\n  const [dailyContribution, setDailyContribution] = useState(0); // Placeholder for daily contribution\n\n  // Fetch sunfish state from the backend\n  useEffect(() => {\n    const fetchSunfishData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/sunfish/'); // Adjust the URL as needed\n        if (!response.ok) {\n          throw new Error('Failed to fetch sunfish data');\n        }\n        const data = await response.json();\n        setLevel(data.level);\n        setDailyContribution(data.daily_contribution || 0);\n        updateStage(data.level); // Update the stage based on the level\n      } catch (error) {\n        console.error('Error fetching sunfish data:', error);\n      }\n    };\n    fetchSunfishData();\n  }, []); // Runs once on mount\n\n  // Update the stage based on the level\n  const updateStage = level => {\n    if (level >= 1 && level <= 3) {\n      setStage('dust'); // 먼지 단계\n    } else if (level >= 4 && level <= 10) {\n      setStage('baby'); // 아기 단계\n    } else if (level >= 11 && level <= 30) {\n      setStage('adult'); // 개복치 단계\n    } else if (level >= 31 && level <= 50) {\n      setStage('king'); // 왕복치 단계\n    } else if (level >= 51) {\n      setStage('new'); // 새로운 개복치 생성\n      setLevel(1); // Reset level for new ocean sunfish\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stage: \", stage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocean-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `../img/ocean-${stage}.png` // Dynamically load images based on stage\n        ,\n        alt: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Today's Contribution: \", dailyContribution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFish, \"MPo8JcNRd9BUH6WPXJis3gcaWQ4=\");\n_c = OceanSunFish;\nexport default OceanSunFish;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFish\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OceanSunFish","_s","level","setLevel","stage","setStage","dailyContribution","setDailyContribution","fetchSunfishData","response","fetch","ok","Error","data","json","daily_contribution","updateStage","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFish.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/OceanSunFish.css';\r\n\r\nfunction OceanSunFish() {\r\n    const [level, setLevel] = useState(1); // Initial level\r\n    const [stage, setStage] = useState('dust'); // Initial stage\r\n    const [dailyContribution, setDailyContribution] = useState(0); // Placeholder for daily contribution\r\n\r\n    // Fetch sunfish state from the backend\r\n    useEffect(() => {\r\n        const fetchSunfishData = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/sunfish/'); // Adjust the URL as needed\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sunfish data');\r\n                }\r\n                const data = await response.json();\r\n                setLevel(data.level);\r\n                setDailyContribution(data.daily_contribution || 0);\r\n                updateStage(data.level); // Update the stage based on the level\r\n            } catch (error) {\r\n                console.error('Error fetching sunfish data:', error);\r\n            }\r\n        };\r\n\r\n        fetchSunfishData();\r\n    }, []); // Runs once on mount\r\n\r\n    // Update the stage based on the level\r\n    const updateStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            setStage('dust'); // 먼지 단계\r\n        } else if (level >= 4 && level <= 10) {\r\n            setStage('baby'); // 아기 단계\r\n        } else if (level >= 11 && level <= 30) {\r\n            setStage('adult'); // 개복치 단계\r\n        } else if (level >= 31 && level <= 50) {\r\n            setStage('king'); // 왕복치 단계\r\n        } else if (level >= 51) {\r\n            setStage('new'); // 새로운 개복치 생성\r\n            setLevel(1); // Reset level for new ocean sunfish\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            <h2>Level: {level}</h2>\r\n            <p>Stage: {stage}</p>\r\n            <div className=\"ocean-image\">\r\n                <img\r\n                    src={`../img/ocean-${stage}.png`} // Dynamically load images based on stage\r\n                    alt={stage}\r\n                />\r\n            </div>\r\n            <p>Today's Contribution: {dailyContribution}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFish;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}