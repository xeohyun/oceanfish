{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFishStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dustLeft from '../img/dust_left.png';\nimport dustRight from '../img/dust_right.png';\nimport fishLeft from '../img/adult_left.png';\nimport kingLeft from '../img/king_left.png';\nimport '../css/OceanSunFish.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFishStatus() {\n  _s();\n  const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\n  const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\n\n  const images = {\n    dust: dustLeft,\n    baby: dustRight,\n    adult: fishLeft,\n    king: kingLeft\n  };\n\n  // API에서 Sunfish 데이터를 가져오는 함수\n  useEffect(() => {\n    const fetchSunfishData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sunfish data');\n        }\n        const data = await response.json();\n        console.log('Fetched Sunfish Data:', data);\n        if (Array.isArray(data) && data.length > 0) {\n          // 모든 Sunfish를 상태에 저장\n          setAllSunfish(data);\n        } else {\n          console.warn(\"No Sunfish data available\");\n          setAllSunfish([]);\n        }\n      } catch (error) {\n        console.error('Error fetching sunfish data:', error);\n      }\n    };\n    fetchSunfishData();\n  }, []);\n  if (allSunfish.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Sunfish...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this); // Sunfish 데이터가 없을 경우 로딩 메시지\n  }\n\n  // 단계(stage) 계산\n  const getStage = level => {\n    if (level >= 1 && level <= 3) {\n      return 'dust';\n    } else if (level >= 4 && level <= 10) {\n      return 'baby';\n    } else if (level >= 11 && level <= 30) {\n      return 'adult';\n    } else if (level >= 31 && level <= 50) {\n      return 'king';\n    }\n    return 'dust'; // 기본값\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: allSunfish.map(fish => {\n        const stage = getStage(fish.level);\n        const currentImage = images[stage];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-sunfish-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Level: \", fish.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Stage: \", stage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", fish.is_alive ? 'Alive' : 'Dead']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocean-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentImage,\n              alt: stage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, fish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setDropdownOpen(prev => !prev),\n      className: \"dropdown-toggle\",\n      children: dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sunfish-dropdown\",\n      children: allSunfish.filter(fish => fish.is_alive).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alive Sunfish available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this) : allSunfish.filter(fish => fish.is_alive).map(fish => {\n        const stage = getStage(fish.level);\n        const currentImage = images[stage];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-sunfish-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentImage,\n            alt: stage,\n            className: \"dropdown-sunfish-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-sunfish-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", fish.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", fish.is_alive ? 'Alive' : 'Dead']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this)]\n        }, fish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFishStatus, \"quBQalfIcEXwdJzRwwp9Cxp3zEc=\");\n_c = OceanSunFishStatus;\nexport default OceanSunFishStatus;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFishStatus\");","map":{"version":3,"names":["React","useState","useEffect","dustLeft","dustRight","fishLeft","kingLeft","jsxDEV","_jsxDEV","OceanSunFishStatus","_s","allSunfish","setAllSunfish","dropdownOpen","setDropdownOpen","images","dust","baby","adult","king","fetchSunfishData","response","fetch","ok","Error","data","json","console","log","Array","isArray","length","warn","error","children","fileName","_jsxFileName","lineNumber","columnNumber","getStage","level","className","map","fish","stage","currentImage","is_alive","src","alt","id","onClick","prev","filter","name","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFishStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dustLeft from '../img/dust_left.png';\r\nimport dustRight from '../img/dust_right.png';\r\nimport fishLeft from '../img/adult_left.png';\r\nimport kingLeft from '../img/king_left.png';\r\nimport '../css/OceanSunFish.css';\r\n\r\nfunction OceanSunFishStatus() {\r\n    const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\r\n    const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\r\n\r\n    const images = {\r\n        dust: dustLeft,\r\n        baby: dustRight,\r\n        adult: fishLeft,\r\n        king: kingLeft,\r\n    };\r\n\r\n    // API에서 Sunfish 데이터를 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchSunfishData = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sunfish data');\r\n                }\r\n                const data = await response.json();\r\n                console.log('Fetched Sunfish Data:', data);\r\n\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    // 모든 Sunfish를 상태에 저장\r\n                    setAllSunfish(data);\r\n                } else {\r\n                    console.warn(\"No Sunfish data available\");\r\n                    setAllSunfish([]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching sunfish data:', error);\r\n            }\r\n        };\r\n\r\n        fetchSunfishData();\r\n    }, []);\r\n\r\n    if (allSunfish.length === 0) {\r\n        return <div>Loading Sunfish...</div>; // Sunfish 데이터가 없을 경우 로딩 메시지\r\n    }\r\n\r\n    // 단계(stage) 계산\r\n    const getStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            return 'dust';\r\n        } else if (level >= 4 && level <= 10) {\r\n            return 'baby';\r\n        } else if (level >= 11 && level <= 30) {\r\n            return 'adult';\r\n        } else if (level >= 31 && level <= 50) {\r\n            return 'king';\r\n        }\r\n        return 'dust'; // 기본값\r\n    };\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            {/* 모든 Sunfish 표시 */}\r\n            <div>\r\n                {allSunfish.map((fish) => {\r\n                    const stage = getStage(fish.level);\r\n                    const currentImage = images[stage];\r\n\r\n                    return (\r\n                        <div key={fish.id} className=\"current-sunfish-container\">\r\n                            <h2>Level: {fish.level}</h2>\r\n                            <p>Stage: {stage}</p>\r\n                            <p>Status: {fish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                            <div className=\"ocean-image\">\r\n                                <img src={currentImage} alt={stage} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* 드롭다운: 살아있는 Sunfish만 표시 */}\r\n            <div onClick={() => setDropdownOpen((prev) => !prev)} className=\"dropdown-toggle\">\r\n                {dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'}\r\n            </div>\r\n            {dropdownOpen && (\r\n                <div className=\"sunfish-dropdown\">\r\n                    {allSunfish.filter((fish) => fish.is_alive).length === 0 ? (\r\n                        <p>No alive Sunfish available.</p>\r\n                    ) : (\r\n                        allSunfish\r\n                            .filter((fish) => fish.is_alive)\r\n                            .map((fish) => {\r\n                                const stage = getStage(fish.level);\r\n                                const currentImage = images[stage];\r\n\r\n                                return (\r\n                                    <div key={fish.id} className=\"dropdown-sunfish-item\">\r\n                                        <img src={currentImage} alt={stage} className=\"dropdown-sunfish-image\" />\r\n                                        <div className=\"dropdown-sunfish-info\">\r\n                                            <p>Name: {fish.name}</p>\r\n                                            <p>Status: {fish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFishStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}