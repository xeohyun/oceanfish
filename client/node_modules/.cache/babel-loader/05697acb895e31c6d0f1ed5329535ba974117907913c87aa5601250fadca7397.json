{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\ContributionCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ContributionCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContributionCalendar() {\n  _s();\n  const [weeks, setWeeks] = useState([]); // 주 단위 데이터\n  const [loading, setLoading] = useState(true); // 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  useEffect(() => {\n    async function fetchBackendContributions() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // 데이터를 7일씩 묶기\n        const groupedWeeks = [];\n        for (let i = 0; i < data.length; i += 7) {\n          groupedWeeks.push(data.slice(i, i + 7));\n        }\n        setWeeks(groupedWeeks); // 주 단위 데이터 설정\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching contributions:', err.message);\n        setError(err.message);\n        setLoading(false);\n      }\n    }\n    fetchBackendContributions();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading contributions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Failed to load contributions: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contribution-calendar\",\n    children: weeks.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-column\",\n      children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-cell level-${Math.min(day.count, 4)}`,\n        title: `Date: ${day.date}, Count: ${day.count}, Sunfish: ${day.sunfish}`,\n        children: day.count\n      }, dayIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, weekIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(ContributionCalendar, \"QJMS6XfYXmdB12uRgkDs89X1tIk=\");\n_c = ContributionCalendar;\nexport default ContributionCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContributionCalendar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ContributionCalendar","_s","weeks","setWeeks","loading","setLoading","error","setError","fetchBackendContributions","response","fetch","ok","Error","status","data","json","groupedWeeks","i","length","push","slice","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","week","weekIndex","day","dayIndex","Math","min","count","title","date","sunfish","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/ContributionCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionCalendar.css';\r\n\r\nfunction ContributionCalendar() {\r\n    const [weeks, setWeeks] = useState([]); // 주 단위 데이터\r\n    const [loading, setLoading] = useState(true); // 로딩 상태\r\n    const [error, setError] = useState(null); // 에러 상태\r\n\r\n    useEffect(() => {\r\n        async function fetchBackendContributions() {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                // 데이터를 7일씩 묶기\r\n                const groupedWeeks = [];\r\n                for (let i = 0; i < data.length; i += 7) {\r\n                    groupedWeeks.push(data.slice(i, i + 7));\r\n                }\r\n\r\n                setWeeks(groupedWeeks); // 주 단위 데이터 설정\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching contributions:', err.message);\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchBackendContributions();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading contributions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-message\">\r\n                <p>Failed to load contributions: {error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            {weeks.map((week, weekIndex) => (\r\n                <div key={weekIndex} className=\"week-column\">\r\n                    {week.map((day, dayIndex) => (\r\n                        <div\r\n                            key={dayIndex}\r\n                            className={`day-cell level-${Math.min(day.count, 4)}`}\r\n                            title={`Date: ${day.date}, Count: ${day.count}, Sunfish: ${day.sunfish}`}\r\n                        >\r\n                            {day.count}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}