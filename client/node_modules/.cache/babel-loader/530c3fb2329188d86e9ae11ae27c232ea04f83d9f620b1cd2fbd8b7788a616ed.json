{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFishStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dustLeft from '../img/dust_left.png';\nimport dustRight from '../img/dust_right.png';\nimport fishLeft from '../img/adult_left.png';\nimport kingLeft from '../img/king_left.png';\nimport '../css/OceanSunFish.css';\nimport CreateFishModal from \"./CreateFishModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFishStatus() {\n  _s();\n  const [sunfish, setSunfish] = useState(null); // 가장 최근 Sunfish 데이터를 저장\n  const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\n  const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\n  const [refreshFlag, setRefreshFlag] = useState(false); // 데이터 강제 동기화 플래그\n  const [isModalVisible, setModalVisible] = useState(false); // create Sunfish 모달창\n  const [alertShownIds, setAlertShownIds] = useState([]); // Alert가 표시된 Sunfish ID 추적\n\n  const images = {\n    dust: dustLeft,\n    baby: dustRight,\n    adult: fishLeft,\n    king: kingLeft\n  };\n\n  // 데이터 동기화 API 호출\n  const fetchSunfishData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\n      if (!response.ok) {\n        throw new Error('Failed to fetch Sunfish data');\n      }\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        const aliveSunfish = data.filter(fish => fish.is_alive);\n        const latestSunfish = aliveSunfish.length > 0 ? aliveSunfish[aliveSunfish.length - 1] : null;\n        setSunfish(latestSunfish); // 현재 Sunfish 설정\n        setAllSunfish(aliveSunfish); // 모든 성장 중인 Sunfish 설정\n\n        // 죽은 Sunfish 감지 및 알림\n        const newlyDeadFish = data.filter(fish => !fish.is_alive && !deadFishIds.includes(fish.id));\n        if (newlyDeadFish.length > 0) {\n          newlyDeadFish.forEach(fish => {\n            alert(`Sunfish \"${fish.name}\" has died.`);\n          });\n          // 죽은 Sunfish ID를 추가\n          setDeadFishIds(prev => [...prev, ...newlyDeadFish.map(fish => fish.id)]);\n        }\n\n        // 기여도와 레벨 동기화\n        if (latestSunfish) {\n          await handleLevelUp(latestSunfish.id);\n        }\n      } else {\n        setSunfish(null);\n        setAllSunfish([]);\n      }\n    } catch (error) {\n      console.error('Error fetching Sunfish data:', error);\n    }\n  };\n\n  // Sunfish name 생성\n  const handleCreateFish = newName => {\n    fetch('http://127.0.0.1:8000/api/sunfish/create/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    }).then(async response => {\n      if (response.ok) {\n        alert(`New Sunfish \"${newName}\" has been created!`);\n      } else {\n        // 서버에서 오류 메시지를 받는 경우 처리\n        const errorData = await response.json();\n        const errorMessage = errorData.error || 'Failed to create Sunfish.';\n        alert(`Error: ${errorMessage}`);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('An unexpected error occurred while creating the Sunfish.');\n    }).finally(() => setModalVisible(false));\n  };\n\n  // Sunfish 레벨 업데이트 및 기여도 동기화\n  const handleLevelUp = async sunfishId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch contributions');\n      }\n      const contributions = await response.json();\n      const totalContributions = contributions.reduce((sum, entry) => sum + entry.count, 0);\n      const levelUp = Math.min(4, totalContributions);\n      await updateSunfishLevel(sunfishId, levelUp);\n    } catch (error) {\n      console.error('Error handling level up:', error);\n    }\n  };\n  const updateSunfishLevel = async (sunfishId, levelUp) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/sunfish/${sunfishId}/level-up/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          levelUp\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update Sunfish level');\n      }\n      const updatedSunfish = await response.json();\n      setSunfish(updatedSunfish); // 업데이트된 Sunfish 데이터 반영\n      console.log('Sunfish level updated:', updatedSunfish);\n    } catch (error) {\n      console.error('Error updating Sunfish level:', error);\n    }\n  };\n\n  // 데이터 동기화: 컴포넌트 마운트 또는 플래그 변경 시 실행\n  useEffect(() => {\n    fetchSunfishData();\n  }, [refreshFlag]); // refreshFlag 변경 시마다 데이터 다시 가져옴\n\n  // 동기화를 강제하는 함수\n  const forceRefresh = () => {\n    setRefreshFlag(prev => !prev); // 플래그 토글\n  };\n  if (!sunfish) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Sunfish...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 16\n    }, this);\n  }\n  const getStage = level => {\n    if (level >= 1 && level <= 3) {\n      return 'dust';\n    } else if (level >= 4 && level <= 10) {\n      return 'baby';\n    } else if (level >= 11 && level <= 30) {\n      return 'adult';\n    } else if (level >= 31) {\n      return 'king';\n    }\n    return 'dust'; // 기본값\n  };\n  const stage = getStage(sunfish.level);\n  const currentImage = images[stage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-button\",\n      onClick: forceRefresh,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateFishModal, {\n      isVisible: isModalVisible,\n      onCreate: handleCreateFish,\n      onClose: () => setModalVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalVisible(true),\n      children: \"Simulate Sunfish Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-sunfish-container\",\n      onClick: () => setDropdownOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Level: \", sunfish.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stage: \", stage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", sunfish.is_alive ? 'Alive' : 'Dead']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ocean-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentImage,\n          alt: stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropdown-toggle\",\n        children: dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sunfish-dropdown\",\n      children: allSunfish.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alive Sunfish available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this) : allSunfish.map(fish => {\n        const fishStage = getStage(fish.level);\n        const fishImage = images[fishStage];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-sunfish-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fishImage,\n            alt: fishStage,\n            className: \"dropdown-sunfish-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-sunfish-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", fish.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", fish.is_alive ? 'Alive' : 'Dead']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }, this)]\n        }, fish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFishStatus, \"c0wVuBUqwoNRhmfhcbZTR61/mYk=\");\n_c = OceanSunFishStatus;\nexport default OceanSunFishStatus;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFishStatus\");","map":{"version":3,"names":["React","useState","useEffect","dustLeft","dustRight","fishLeft","kingLeft","CreateFishModal","jsxDEV","_jsxDEV","OceanSunFishStatus","_s","sunfish","setSunfish","allSunfish","setAllSunfish","dropdownOpen","setDropdownOpen","refreshFlag","setRefreshFlag","isModalVisible","setModalVisible","alertShownIds","setAlertShownIds","images","dust","baby","adult","king","fetchSunfishData","response","fetch","ok","Error","data","json","Array","isArray","length","aliveSunfish","filter","fish","is_alive","latestSunfish","newlyDeadFish","deadFishIds","includes","id","forEach","alert","name","setDeadFishIds","prev","map","handleLevelUp","error","console","handleCreateFish","newName","method","headers","body","JSON","stringify","then","errorData","errorMessage","catch","finally","sunfishId","contributions","totalContributions","reduce","sum","entry","count","levelUp","Math","min","updateSunfishLevel","updatedSunfish","log","forceRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","getStage","level","stage","currentImage","className","onClick","isVisible","onCreate","onClose","src","alt","fishStage","fishImage","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFishStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dustLeft from '../img/dust_left.png';\r\nimport dustRight from '../img/dust_right.png';\r\nimport fishLeft from '../img/adult_left.png';\r\nimport kingLeft from '../img/king_left.png';\r\nimport '../css/OceanSunFish.css';\r\nimport CreateFishModal from \"./CreateFishModal\";\r\n\r\nfunction OceanSunFishStatus() {\r\n    const [sunfish, setSunfish] = useState(null); // 가장 최근 Sunfish 데이터를 저장\r\n    const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\r\n    const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\r\n    const [refreshFlag, setRefreshFlag] = useState(false); // 데이터 강제 동기화 플래그\r\n    const [isModalVisible, setModalVisible] = useState(false); // create Sunfish 모달창\r\n    const [alertShownIds, setAlertShownIds] = useState([]); // Alert가 표시된 Sunfish ID 추적\r\n\r\n    const images = {\r\n        dust: dustLeft,\r\n        baby: dustRight,\r\n        adult: fishLeft,\r\n        king: kingLeft,\r\n    };\r\n\r\n    // 데이터 동기화 API 호출\r\n    const fetchSunfishData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch Sunfish data');\r\n            }\r\n            const data = await response.json();\r\n\r\n            if (Array.isArray(data) && data.length > 0) {\r\n                const aliveSunfish = data.filter((fish) => fish.is_alive);\r\n                const latestSunfish = aliveSunfish.length > 0 ? aliveSunfish[aliveSunfish.length - 1] : null;\r\n                setSunfish(latestSunfish); // 현재 Sunfish 설정\r\n                setAllSunfish(aliveSunfish); // 모든 성장 중인 Sunfish 설정\r\n\r\n                // 죽은 Sunfish 감지 및 알림\r\n                const newlyDeadFish = data.filter(\r\n                    (fish) => !fish.is_alive && !deadFishIds.includes(fish.id)\r\n                );\r\n                if (newlyDeadFish.length > 0) {\r\n                    newlyDeadFish.forEach((fish) => {\r\n                        alert(`Sunfish \"${fish.name}\" has died.`);\r\n                    });\r\n                    // 죽은 Sunfish ID를 추가\r\n                    setDeadFishIds((prev) => [...prev, ...newlyDeadFish.map((fish) => fish.id)]);\r\n                }\r\n\r\n                // 기여도와 레벨 동기화\r\n                if (latestSunfish) {\r\n                    await handleLevelUp(latestSunfish.id);\r\n                }\r\n            } else {\r\n                setSunfish(null);\r\n                setAllSunfish([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching Sunfish data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    // Sunfish name 생성\r\n     const handleCreateFish = (newName) => {\r\n        fetch('http://127.0.0.1:8000/api/sunfish/create/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ name: newName }),\r\n        })\r\n            .then(async (response) => {\r\n            if (response.ok) {\r\n                alert(`New Sunfish \"${newName}\" has been created!`);\r\n            } else {\r\n                // 서버에서 오류 메시지를 받는 경우 처리\r\n                const errorData = await response.json();\r\n                const errorMessage = errorData.error || 'Failed to create Sunfish.';\r\n                alert(`Error: ${errorMessage}`);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n            alert('An unexpected error occurred while creating the Sunfish.');\r\n        })\r\n        .finally(() => setModalVisible(false));\r\n    }\r\n\r\n    // Sunfish 레벨 업데이트 및 기여도 동기화\r\n    const handleLevelUp = async (sunfishId) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch contributions');\r\n            }\r\n            const contributions = await response.json();\r\n\r\n            const totalContributions = contributions.reduce((sum, entry) => sum + entry.count, 0);\r\n\r\n            const levelUp = Math.min(4, totalContributions);\r\n            await updateSunfishLevel(sunfishId, levelUp);\r\n        } catch (error) {\r\n            console.error('Error handling level up:', error);\r\n        }\r\n    };\r\n\r\n    const updateSunfishLevel = async (sunfishId, levelUp) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/sunfish/${sunfishId}/level-up/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ levelUp }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update Sunfish level');\r\n            }\r\n\r\n            const updatedSunfish = await response.json();\r\n            setSunfish(updatedSunfish); // 업데이트된 Sunfish 데이터 반영\r\n            console.log('Sunfish level updated:', updatedSunfish);\r\n        } catch (error) {\r\n            console.error('Error updating Sunfish level:', error);\r\n        }\r\n    };\r\n\r\n    // 데이터 동기화: 컴포넌트 마운트 또는 플래그 변경 시 실행\r\n    useEffect(() => {\r\n        fetchSunfishData();\r\n    }, [refreshFlag]); // refreshFlag 변경 시마다 데이터 다시 가져옴\r\n\r\n    // 동기화를 강제하는 함수\r\n    const forceRefresh = () => {\r\n        setRefreshFlag((prev) => !prev); // 플래그 토글\r\n    };\r\n\r\n    if (!sunfish) {\r\n        return <div>Loading Sunfish...</div>;\r\n    }\r\n\r\n    const getStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            return 'dust';\r\n        } else if (level >= 4 && level <= 10) {\r\n            return 'baby';\r\n        } else if (level >= 11 && level <= 30) {\r\n            return 'adult';\r\n        } else if (level >= 31) {\r\n            return 'king';\r\n        }\r\n        return 'dust'; // 기본값\r\n    };\r\n\r\n    const stage = getStage(sunfish.level);\r\n    const currentImage = images[stage];\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            {/* 새로고침 버튼 추가 */}\r\n            <button className=\"refresh-button\" onClick={forceRefresh}>\r\n                Refresh Data\r\n            </button>\r\n\r\n            {/* Sunfish가 없는 경우 Modal 표시 */}\r\n            <CreateFishModal\r\n                isVisible={isModalVisible}\r\n                onCreate={handleCreateFish}\r\n                onClose={() => setModalVisible(false)}\r\n            />\r\n            <button onClick={() => setModalVisible(true)}>Simulate Sunfish Creation</button>\r\n\r\n            {/* 현재 Sunfish 상태 표시 */}\r\n            <div\r\n                className=\"current-sunfish-container\"\r\n                onClick={() => setDropdownOpen((prev) => !prev)}\r\n            >\r\n                <h2>Level: {sunfish.level}</h2>\r\n                <p>Stage: {stage}</p>\r\n                <p>Status: {sunfish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                <div className=\"ocean-image\">\r\n                    <img src={currentImage} alt={stage}/>\r\n                </div>\r\n                <p className=\"dropdown-toggle\">{dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'}</p>\r\n            </div>\r\n\r\n            {/* 드롭다운: 모든 살아있는 Sunfish 표시 */}\r\n            {dropdownOpen && (\r\n                <div className=\"sunfish-dropdown\">\r\n                    {allSunfish.length === 0 ? (\r\n                        <p>No alive Sunfish available.</p>\r\n                    ) : (\r\n                        allSunfish.map((fish) => {\r\n                            const fishStage = getStage(fish.level);\r\n                            const fishImage = images[fishStage];\r\n\r\n                            return (\r\n                                <div key={fish.id} className=\"dropdown-sunfish-item\">\r\n                                    <img src={fishImage} alt={fishStage} className=\"dropdown-sunfish-image\"/>\r\n                                    <div className=\"dropdown-sunfish-info\">\r\n                                        <p>Name: {fish.name}</p>\r\n                                        <p>Status: {fish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFishStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}