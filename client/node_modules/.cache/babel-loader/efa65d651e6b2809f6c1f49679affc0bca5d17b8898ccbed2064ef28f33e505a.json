{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\OceanSunFishStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dustLeft from '../img/dust_left.png';\nimport dustRight from '../img/dust_right.png';\nimport fishLeft from '../img/adult_left.png';\nimport kingLeft from '../img/king_left.png';\nimport '../css/OceanSunFish.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OceanSunFishStatus() {\n  _s();\n  const [sunfish, setSunfish] = useState(null); // 가장 최근 Sunfish 데이터를 저장\n  const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\n  const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\n  const [refreshFlag, setRefreshFlag] = useState(false); // 데이터 강제 동기화 플래그\n  const [isModalVisible, setModalVisible] = useState(false); // create Sunfish 모달창\n\n  const images = {\n    dust: dustLeft,\n    baby: dustRight,\n    adult: fishLeft,\n    king: kingLeft\n  };\n\n  // 데이터 동기화 API 호출\n  const fetchSunfishData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\n      if (!response.ok) {\n        throw new Error('Failed to fetch Sunfish data');\n      }\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        const latestSunfish = data[data.length - 1];\n        setSunfish(latestSunfish);\n        const aliveSunfish = data.filter(fish => fish.is_alive);\n        setAllSunfish(aliveSunfish);\n\n        // 최신 Sunfish 데이터와 연계된 기여도 업데이트\n        await handleLevelUp(latestSunfish.id);\n      } else {\n        setSunfish(null);\n        setAllSunfish([]);\n      }\n    } catch (error) {\n      console.error('Error fetching Sunfish data:', error);\n    }\n  };\n\n  // Sunfish 레벨 업데이트 및 기여도 동기화\n  const handleLevelUp = async sunfishId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch contributions');\n      }\n      const contributions = await response.json();\n      const totalContributions = contributions.reduce((sum, entry) => sum + entry.count, 0);\n      const levelUp = Math.min(4, totalContributions);\n      await updateSunfishLevel(sunfishId, levelUp);\n    } catch (error) {\n      console.error('Error handling level up:', error);\n    }\n  };\n  const updateSunfishLevel = async (sunfishId, levelUp) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/sunfish/${sunfishId}/level-up/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          levelUp\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update Sunfish level');\n      }\n      const updatedSunfish = await response.json();\n      setSunfish(updatedSunfish); // 업데이트된 Sunfish 데이터 반영\n      console.log('Sunfish level updated:', updatedSunfish);\n    } catch (error) {\n      console.error('Error updating Sunfish level:', error);\n    }\n  };\n\n  // 데이터 동기화: 컴포넌트 마운트 또는 플래그 변경 시 실행\n  useEffect(() => {\n    fetchSunfishData();\n  }, [refreshFlag]); // refreshFlag 변경 시마다 데이터 다시 가져옴\n\n  // 동기화를 강제하는 함수\n  const forceRefresh = () => {\n    setRefreshFlag(prev => !prev); // 플래그 토글\n  };\n  if (!sunfish) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Sunfish...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n  const getStage = level => {\n    if (level >= 1 && level <= 3) {\n      return 'dust';\n    } else if (level >= 4 && level <= 10) {\n      return 'baby';\n    } else if (level >= 11 && level <= 30) {\n      return 'adult';\n    } else if (level >= 31) {\n      return 'king';\n    }\n    return 'dust'; // 기본값\n  };\n  const stage = getStage(sunfish.level);\n  const currentImage = images[stage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocean-level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-button\",\n      onClick: forceRefresh,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-sunfish-container\",\n      onClick: () => setDropdownOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Level: \", sunfish.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stage: \", stage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", sunfish.is_alive ? 'Alive' : 'Dead']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ocean-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentImage,\n          alt: stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropdown-toggle\",\n        children: dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sunfish-dropdown\",\n      children: allSunfish.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alive Sunfish available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this) : allSunfish.map(fish => {\n        const fishStage = getStage(fish.level);\n        const fishImage = images[fishStage];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-sunfish-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fishImage,\n            alt: fishStage,\n            className: \"dropdown-sunfish-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-sunfish-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", fish.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", fish.is_alive ? 'Alive' : 'Dead']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this)]\n        }, fish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(OceanSunFishStatus, \"yoS2TUCiTcFN+gJ1/OY9Kd+kYWY=\");\n_c = OceanSunFishStatus;\nexport default OceanSunFishStatus;\nvar _c;\n$RefreshReg$(_c, \"OceanSunFishStatus\");","map":{"version":3,"names":["React","useState","useEffect","dustLeft","dustRight","fishLeft","kingLeft","jsxDEV","_jsxDEV","OceanSunFishStatus","_s","sunfish","setSunfish","allSunfish","setAllSunfish","dropdownOpen","setDropdownOpen","refreshFlag","setRefreshFlag","isModalVisible","setModalVisible","images","dust","baby","adult","king","fetchSunfishData","response","fetch","ok","Error","data","json","Array","isArray","length","latestSunfish","aliveSunfish","filter","fish","is_alive","handleLevelUp","id","error","console","sunfishId","contributions","totalContributions","reduce","sum","entry","count","levelUp","Math","min","updateSunfishLevel","method","headers","body","JSON","stringify","updatedSunfish","log","forceRefresh","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","getStage","level","stage","currentImage","className","onClick","src","alt","map","fishStage","fishImage","name","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/OceanSunFishStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dustLeft from '../img/dust_left.png';\r\nimport dustRight from '../img/dust_right.png';\r\nimport fishLeft from '../img/adult_left.png';\r\nimport kingLeft from '../img/king_left.png';\r\nimport '../css/OceanSunFish.css';\r\n\r\nfunction OceanSunFishStatus() {\r\n    const [sunfish, setSunfish] = useState(null); // 가장 최근 Sunfish 데이터를 저장\r\n    const [allSunfish, setAllSunfish] = useState([]); // 모든 Sunfish 데이터를 저장\r\n    const [dropdownOpen, setDropdownOpen] = useState(false); // 드롭다운 상태\r\n    const [refreshFlag, setRefreshFlag] = useState(false); // 데이터 강제 동기화 플래그\r\n    const [isModalVisible, setModalVisible] = useState(false); // create Sunfish 모달창\r\n\r\n    const images = {\r\n        dust: dustLeft,\r\n        baby: dustRight,\r\n        adult: fishLeft,\r\n        king: kingLeft,\r\n    };\r\n\r\n    // 데이터 동기화 API 호출\r\n    const fetchSunfishData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/sunfish/');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch Sunfish data');\r\n            }\r\n            const data = await response.json();\r\n\r\n            if (Array.isArray(data) && data.length > 0) {\r\n                const latestSunfish = data[data.length - 1];\r\n                setSunfish(latestSunfish);\r\n\r\n                const aliveSunfish = data.filter((fish) => fish.is_alive);\r\n                setAllSunfish(aliveSunfish);\r\n\r\n                // 최신 Sunfish 데이터와 연계된 기여도 업데이트\r\n                await handleLevelUp(latestSunfish.id);\r\n            } else {\r\n                setSunfish(null);\r\n                setAllSunfish([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching Sunfish data:', error);\r\n        }\r\n    };\r\n\r\n    // Sunfish 레벨 업데이트 및 기여도 동기화\r\n    const handleLevelUp = async (sunfishId) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/contributions/${sunfishId}/`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch contributions');\r\n            }\r\n            const contributions = await response.json();\r\n\r\n            const totalContributions = contributions.reduce((sum, entry) => sum + entry.count, 0);\r\n\r\n            const levelUp = Math.min(4, totalContributions);\r\n            await updateSunfishLevel(sunfishId, levelUp);\r\n        } catch (error) {\r\n            console.error('Error handling level up:', error);\r\n        }\r\n    };\r\n\r\n    const updateSunfishLevel = async (sunfishId, levelUp) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/sunfish/${sunfishId}/level-up/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ levelUp }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update Sunfish level');\r\n            }\r\n\r\n            const updatedSunfish = await response.json();\r\n            setSunfish(updatedSunfish); // 업데이트된 Sunfish 데이터 반영\r\n            console.log('Sunfish level updated:', updatedSunfish);\r\n        } catch (error) {\r\n            console.error('Error updating Sunfish level:', error);\r\n        }\r\n    };\r\n\r\n    // 데이터 동기화: 컴포넌트 마운트 또는 플래그 변경 시 실행\r\n    useEffect(() => {\r\n        fetchSunfishData();\r\n    }, [refreshFlag]); // refreshFlag 변경 시마다 데이터 다시 가져옴\r\n\r\n    // 동기화를 강제하는 함수\r\n    const forceRefresh = () => {\r\n        setRefreshFlag((prev) => !prev); // 플래그 토글\r\n    };\r\n\r\n    if (!sunfish) {\r\n        return <div>Loading Sunfish...</div>;\r\n    }\r\n\r\n    const getStage = (level) => {\r\n        if (level >= 1 && level <= 3) {\r\n            return 'dust';\r\n        } else if (level >= 4 && level <= 10) {\r\n            return 'baby';\r\n        } else if (level >= 11 && level <= 30) {\r\n            return 'adult';\r\n        } else if (level >= 31) {\r\n            return 'king';\r\n        }\r\n        return 'dust'; // 기본값\r\n    };\r\n\r\n    const stage = getStage(sunfish.level);\r\n    const currentImage = images[stage];\r\n\r\n    return (\r\n        <div className=\"ocean-level-container\">\r\n            {/* 새로고침 버튼 추가 */}\r\n            <button className=\"refresh-button\" onClick={forceRefresh}>\r\n                Refresh Data\r\n            </button>\r\n\r\n            {/* 현재 Sunfish 상태 표시 */}\r\n            <div\r\n                className=\"current-sunfish-container\"\r\n                onClick={() => setDropdownOpen((prev) => !prev)}\r\n            >\r\n                <h2>Level: {sunfish.level}</h2>\r\n                <p>Stage: {stage}</p>\r\n                <p>Status: {sunfish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                <div className=\"ocean-image\">\r\n                    <img src={currentImage} alt={stage} />\r\n                </div>\r\n                <p className=\"dropdown-toggle\">{dropdownOpen ? 'Hide All Fish ▲' : 'Show All Fish ▼'}</p>\r\n            </div>\r\n\r\n            {/* 드롭다운: 모든 살아있는 Sunfish 표시 */}\r\n            {dropdownOpen && (\r\n                <div className=\"sunfish-dropdown\">\r\n                    {allSunfish.length === 0 ? (\r\n                        <p>No alive Sunfish available.</p>\r\n                    ) : (\r\n                        allSunfish.map((fish) => {\r\n                            const fishStage = getStage(fish.level);\r\n                            const fishImage = images[fishStage];\r\n\r\n                            return (\r\n                                <div key={fish.id} className=\"dropdown-sunfish-item\">\r\n                                    <img src={fishImage} alt={fishStage} className=\"dropdown-sunfish-image\" />\r\n                                    <div className=\"dropdown-sunfish-info\">\r\n                                        <p>Name: {fish.name}</p>\r\n                                        <p>Status: {fish.is_alive ? 'Alive' : 'Dead'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OceanSunFishStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}