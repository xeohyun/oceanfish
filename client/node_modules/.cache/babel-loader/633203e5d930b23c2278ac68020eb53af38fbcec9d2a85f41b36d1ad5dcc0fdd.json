{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNIV\\\\2024 2\\uD559\\uAE30\\\\Open Source Software\\\\TermProject\\\\oceanfish\\\\client\\\\src\\\\components\\\\ContributionCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/ContributionCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContributionCalendar() {\n  _s();\n  const [contributions, setContributions] = useState([]); // 초기값을 빈 배열로 설정\n  const [loading, setLoading] = useState(true); // 로딩 상태 추가\n  const [error, setError] = useState(null); // 에러 상태\n\n  useEffect(() => {\n    async function fetchBackendContributions() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Backend Contribution API Response:', data);\n        setContributions(data); // 데이터 설정\n        setLoading(false); // 로딩 완료\n      } catch (err) {\n        console.error('Error fetching contributions:', err.message);\n        setError(err.message);\n        setLoading(false); // 로딩 완료\n      }\n    }\n    fetchBackendContributions();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading contributions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Failed to load contributions: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contribution-calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: contributions.map((contribution, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-cell level-${Math.min(contribution.count, 4)}` // `level-X` 클래스 추가\n        ,\n        title: `Date: ${contribution.date}, Count: ${contribution.count}, Sunfish: ${contribution.sunfish}`,\n        children: contribution.count\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ContributionCalendar, \"V7SSGZHJ7BsRP2ZyTlgffXgky+Y=\");\n_c = ContributionCalendar;\nexport default ContributionCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContributionCalendar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ContributionCalendar","_s","contributions","setContributions","loading","setLoading","error","setError","fetchBackendContributions","response","fetch","ok","Error","status","data","json","console","log","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","contribution","index","Math","min","count","title","date","sunfish","_c","$RefreshReg$"],"sources":["D:/UNIV/2024 2학기/Open Source Software/TermProject/oceanfish/client/src/components/ContributionCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../css/ContributionCalendar.css';\r\n\r\nfunction ContributionCalendar() {\r\n    const [contributions, setContributions] = useState([]); // 초기값을 빈 배열로 설정\r\n    const [loading, setLoading] = useState(true); // 로딩 상태 추가\r\n    const [error, setError] = useState(null); // 에러 상태\r\n\r\n    useEffect(() => {\r\n        async function fetchBackendContributions() {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/contributions/'); // 백엔드 API URL\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                console.log('Backend Contribution API Response:', data);\r\n\r\n                setContributions(data); // 데이터 설정\r\n                setLoading(false); // 로딩 완료\r\n            } catch (err) {\r\n                console.error('Error fetching contributions:', err.message);\r\n                setError(err.message);\r\n                setLoading(false); // 로딩 완료\r\n            }\r\n        }\r\n\r\n        fetchBackendContributions();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading contributions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-message\">\r\n                <p>Failed to load contributions: {error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"contribution-calendar\">\r\n            <div className=\"calendar-grid\">\r\n                {contributions.map((contribution, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`day-cell level-${Math.min(contribution.count, 4)}`} // `level-X` 클래스 추가\r\n                        title={`Date: ${contribution.date}, Count: ${contribution.count}, Sunfish: ${contribution.sunfish}`}\r\n                    >\r\n                        {contribution.count}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContributionCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}